需求规格说明书
修订历史记录
目录
引言
编写目的
明确本系统功能范围、边界、需求、接口，供客户确认，供后续设计人员进行系统设计等操作。
项目背景
西山温泉体育公园为海新域所有，主营业务为冬季滑雪。项目所在地北京每年适合滑雪时间只有90天左右，其余时间，项目资源基本处于闲置状态。为了盘活闲置资产，管理层决定开展非雪季运营业务，包括举办亲子类活动、文体培训、蓝羽运动场地、夏日啤酒花园等项目。
当前西山体育公园信息化系统有雪季运营系统，系统主要功能为支撑冬季滑雪门票管理、器材租赁管理、订单管理、核销管理等。且系统的提供商为第三方公司，系统以SAAS模式提供使用。为了支持开展更多业务种类，以及更精细化市场营销，企业需要收集掌控更多用户数据，所以希望建设一套非雪季运营系统，C端用户使用的小程序，并与已有的系统进行集成，打通用户数据，实现统一系统登录等功能。
甲方希望通过本项目的建设，提高信息化和数字化水平，支持甲方开展更多业务，提高工作效率，数据分析，营销。
缩写说明
DB:数据库(Database)
NFR:非功能性需求(Non-Functional Requirement)
DDOS:分布式拒绝服务攻击(Distributed Denial of Service)
ESB:企业服务总线(Enterprise Service Bus)
SAN:存储区域网络 (Storage Area Network)
HA:高可用性 (High Availability)
IOPS:每秒输入输出次数(Input/Output Operations Per Second)
UI:用户界面(User Interface)
REST:表述性状态传递(Representational State Transfer)
SDK:软件开发工具包(Software Development Kit)
CI:持续集成(Continuous Integration)
术语定义
非雪季：指每年除12月、1月、2月以外其他时间。
雪季：指每年12月、1月、2月的时间。
参考资料
《需求调研访谈记录》
《温泉冰雪体育公园2023年非雪季运营方案》
功能需求
概述
系统用于满足西山体育公园日常业务运营，提供满足各种业务场景的功能模块，包括非雪季各种业务场景系统管理功能，面向C端用户使用的微信小城，门票核销的核销客户端。与目前正在使用的雪季运营系统实现系统集成，以实现单点登录、统一门户、统一用户等功能。
功能框架
运行环境
系统应能稳定运行在主流服务器操作系统环境,如Linux、Windows Server等。
关键组件应提供冗余机制,防止单点故障影响系统。
假设与依赖
系统假设硬件环境满足产品要求,包括服务器、网络、存储等。
系统依赖于稳定的操作系统环境,包括Windows Server、Linux等主流服务器系统。
系统依赖于网络环境提供足够的带宽和低延迟。
系统依赖于第三方组件提供的功能满足需求,包括数据库、缓存等。
系统假设用户具备基本的操作知识,能够使用界面功能。
系统依赖于用户提供正确、完整的输入数据。
系统依赖于开发、测试人员的技能确保软件质量。
系统依赖于项目经理按时完成项目管理工作。
系统依赖于产品使用者提供明确、准确的需求。
系统假设运维人员能够完成日常维护、监控工作。
系统依赖第三方支付接口完成在线支付功能。
系统特性
非雪季运营管理
活动管理
系统应该能够创建新活动,支持输入活动名称、时间、地点、人数限制、费用、活动介绍等基本信息
系统应该展示活动列表,可以查看每场活动的基本信息
系统应该支持活动的在线编辑,管理员可以修改活动的相关信息
系统应该提供活动搜索功能,可以通过关键字、时间等搜索过滤活动
系统应该允许用户对活动进行评价和点评
系统应该允许管理员将活动设置为删除状态,不再对外展示
系统应该支持活动发布管理,可以将活动设置为发布或取消发布状态
系统应该允许设置活动的发布时间,控制活动对用户的可见性
场地管理
系统应该能够创建新场地,支持输入场地名称、类型、营业时间、子场地、价格等信息
系统应该展示场地列表,可以查看每一个场地的基本信息和子场地情况
系统应该支持对场地信息进行在线编辑修改
系统应该提供场地搜索功能,可以通过场地名称、编号等条件过滤场地信息
系统应该提供场地预定看板功能，可以查看任何场地、任何时间的预定情况。
系统应该允许管理员对场地进行预定
系统应该允许管理员取消场地的预定
订单管理
系统应该支持订单分类管理，可分为活动订单和场地订单。
系统应该支持订单的查询功能,可以查看所有订单或按条件过滤
系统应该能够将订单设置为退款状态,并生成相应的退款单据
系统应该允许查看订单的全部详情,包括订单项、费用、退款等信息
员工管理
系统应该维护员工信息,包括姓名、联系方式、所属部门等
系统应该展示员工列表,可以查看所有员工的基本信息
系统应该允许删除员工。
用户管理
系统应该允许展示用户列表，可以查看用户的订单信息。
系统应该允许通过姓名、手机号查询用户。
财务管理
系统应该支持对商户的结算信息进行审核,生成结算单据
系统应该生成并展示各类财务报表,包括收入报表、支出报表等
统计分析
系统应该能够进行销售数据的统计分析,并生成报表
系统应该支持自定义统计分析的时间范围
C端小程序
首页
系统应该在主页显示轮播图,轮播展示最新或热门活动。
系统应该在主页推荐热门活动,用户可以点击进入活动详情。
系统应该显示用户所在位置信息,推荐该地区活动。
系统应提供频道功能,包括亲子户外、公司团建等频道。
用户可以选择感兴趣的频道浏览活动。
系统应提供精彩活动入口,让用户快速找到热门活动。
系统应显示精彩活动列表,用户可以筛选浏览。
用户可以查看活动详情、在线报名、收藏、分享活动。
用户可以在活动详情页进行在线报名，可以选择人数，添加用户联系方式，支付费用。
用户报名后,系统应发送活动提醒消息。
场地
系统应显示可预定场地列表,包含每个场地详情。
用户可以在场地详情页进行预定、收藏、分享。
用户可以在场地详情页选择时间、子场地，进行在线支付。
用户预定成功后,系统应发送确认通知。
活动
系统应显示用户的活动订单列表,可以按不同状态筛选。
用户可以查看活动订单详情,包括二维码等信息。
系统应显示用户的场地订单列表,可以按状态筛选。
用户可以查看场地订单详情,包括二维码等信息。
系统应提供订单退款功能。
个人中心
用户可以在个人中心查看自己的活动订单。
用户可以在个人中心查看自己的场地订单。
用户可以在消息中心查看系统通知。
用户可以提交投诉与建议。
用户可以在我的收藏查看收藏的活动和场地。
核销客户端
登录
系统应支持微信授权快捷登录,无需注册账号和密码。
系统应维持用户登录状态,避免重复扫码。
系统应对接微信公众平台接口,实现微信登录、用户信息获取等功能。
首页
系统应提供门票扫码核销功能,工作人员可以扫描门票二维码完成核销。
系统应显示已核销门票列表,包括门票编号、核销时间等信息。
用户可以查看每张门票的购票详情,包括购票人信息、购买渠道等信息。
系统集成
用户身份认证和单点登录
用户应只需要一个账号密码,就可以在两个系统之间通过单点登录机制完成认证和访问。
权限和角色同步
两个系统应实现用户的角色和权限同步,保证用户在不同系统中权限一致。
核心业务流程对接
雪季系统和非雪季系统的核心业务流程应进行对接,确保业务连贯一致。
数据交换接口
两个系统间应提供标准的数据交换接口,确保重要数据的互通。
雪季运营系统私有化部署
服务器环境设置
数据库、web服务器初始化。完成站点、数据库部署至私有服务器。
小程序、微信支付、支付宝相关域名、白名单进行调整。
数据分离
票务SAAS平台数据分离，为私有化做准备。
测试
验证迁移数据正确性，根据情况调整策略。
租赁手持端
发布全新独立手持客户端。进行端私有部署。
闸机客户端
发布全新独立闸机客户端。进行私有部署。
美团测试
联系美团修改回调域名、IP白名单，进行测试。
携程测试
联系携程修改回调域名、IP白名单，进行测试。
抖音
抖音连调
小程序修改
私有部署小程序调整
发布
二次测试、停机数据切换、正式发布
系统角色
系统维护
系统应提供备份管理功能,能定期自动备份关键数据和文件。备份数据应包含数据库备份、日志备份、上传文件备份等。
系统应实现日志管理功能,包括用户操作日志、系统运行日志、安全日志等的查询和保存。日志保存时限应可配置。
系统应实现故障监控和报警功能,当检测到关键故障时能实时触发报警。
系统应建立完善的故障排除机制,快速定位并解决系统故障。提供故障知识库帮助提高故障排除效率。
系统应实现在线诊断功能,能诊断系统运行指标是否正常,预测可能的风险。
系统应提供灾备机制,关键业务应具备多点冗余部署,实现高可用性。
系统升级时应确保服务不中断,提供无缝升级方案。升级后应进行全面的测试验证。
系统应具有完善的用户权限管理功能,管理员权限按角色区分。
系统访问应采取加密传输、接口访问验证等方式,确保系统安全。
非功能性需求
性能需求
系统应能支持至少5万日活用户,保证系统性能。
系统页面响应时间应少于1秒,保证用户体验。
系统应支持至少1000用户同时在线,确保高并发性能。
系统应能承受每秒3000请求的流量,保证高访问性能。
系统应具备水平扩展能力,可以通过增加服务器弹性扩容。
系统数据库查询效率应高于100tps,确保数据处理速度。
系统应用加载时间应少于2秒,保证启动速度。
系统应用内存使用率不应超过60%,优化系统资源占用。
系统应保证界面流畅运行,无明显卡顿。
网络传输应采用合理的压缩算法,确保传输效率。
提供性能监控机制,分析系统的瓶颈。
安全性需求
系统登录应采用安全加密的密码算法,防止密码被破解。
系统用户密码长度不应少于8位,并要求强密码策略。
系统登录应采取多因子认证,提高验证安全性。
系统应用SSL证书加密用户数据传输,确保传输安全。
系统应对用户输入数据进行过滤,防止SQL注入、XSS等攻击。
系统应限制每个接口的访问频率,防止拒绝服务攻击。
系统应采取数据加密机制,对敏感数据加密处理。
系统应具备完善的日志审计功能,记录访问日志。
系统应设置合理的用户权限控制机制,遵循最小权限原则。
系统应定期进行安全审计和漏洞扫描,发现潜在风险。
系统应有完善的备份机制和灾难恢复方案,防止数据丢失。
可用性需求
系统的设计目标应确保99.9%的正常运行时间。
系统应设计容错机制,关键模块应具有容错和自动恢复功能。
系统应支持热备份和无缝切换,关键业务应实现高可用设计。
硬件系统应实现冗余配置,消除单点故障。
系统应针对不同类型故障设定故障级别,并对应故障响应机制。
系统应提供实时监控功能,并在检测到故障时快速报警。
系统应定期进行可用性测试,评估不同情况下的可用性指标。
系统接口应进行压力测试,确保能够支持预计负载。
系统发布和升级应基于无中断策略,不影响服务。
系统应制定备份策略和灾难恢复方案,降低数据丢失风险。
系统应提供完善的故障排除机制,快速定位和修复故障。
用户文档
应提供完善的用户操作手册,覆盖各个功能模块的使用方法。
用户手册应采用简洁明了的语言描述操作步骤。
用户手册中的截图应清晰可见,与实际界面一致。
用户手册应包含必要的注意事项和警告信息。
应提供新版本变更日志,突出强调新增和变更功能。
应提供在线帮助系统,用户可以快速搜索问题的答案。
在线帮助应覆盖手册内容,并有检索功能帮助用户快速定位。
应提供专门的新手教程,帮助初级用户快速上手。
应对管理员提供系统管理手册,覆盖各类运维操作。
文档应定期审核更新,保证文档的正确性和最新度。
应提供文档的各类输出格式,包括在线网页、PDF、视频等。
其他需求
系统界面应符合产品样式规范,保证页面风格一致性。
系统交互应遵循人机交互规范,确保用户体验一致。
系统应支持响应式设计,兼容不同终端设备。
系统应提供统计和分析功能,支持关键指标统计。
系统应实现多语言支持,支持中文、英文等语言切换。
系统应实现符合无障碍访问规范,帮助残障用户访问。
系统应当有完善的版本控制功能,确保源代码可追溯。
系统应采用开发语言的最新稳定版本,保证可维护性。
系统应尽可能采用轻量级、高效的框架和组件。
系统应保证代码质量,提供代码扫描、评论等功能。
外部接口需求
用户接口
系统提供简单易用的图形用户界面,促进用户交互。
用户界面响应速度应 <= 0.5秒,给用户流畅体验。
界面布局应科学合理,重要功能突出显示。
系统界面应支持响应式自适应,兼容移动端。
系统应提供搜索框支持按关键词查询。
列表页应支持多条件组合查询过滤结果。
详情页应充分展示 entity 的所有相关信息。
系统提供清晰易识别的图标,辅助用户理解。
系统应采用统一的色调风格、字体大小,保持一致性。
提示信息应友好、专业,避免简单的警告语句。
系统应针对不同用户提供个性化信息展示和推荐。
重要操作应要求二次确认,防止用户错误操作。
硬件接口
系统应支持标准网口接口,可通过以太网连接。
系统应提供标准电源接口,可连接交流或直流电源。
系统应提供物理服务器管理接口,如VGA、USB。
系统应支持行业标准的存储接口,如SAS、SATA、NVMe。
系统应提供可热插拔的磁盘插槽,支持存储扩展。
系统应支持管理网卡进行远程管理访问。
系统应提供独立的管理网络接口。
重要设备应提供冗余电源接口,确保高可用性。
系统应支持机架安装,提供标准的机架滑轨和托架。
系统应设置物理指示灯显示系统运行状态。
设备应易于拆卸维护,提供手拧螺丝等辅助工具。
软件接口
系统应提供完整的 API 接口文档,方便二次开发。
API 接口应采用统一的设计风格,保持一致性。
API 接口应基于行业标准协议,如 RESTful、RPC。
API 接口应提供完整的请求参数定义、返回结果定义。
API 接口应提供不同的访问许可,实现访问控制。
系统应提供对应不同编程语言的 SDK。
SDK 应抽象底层接口细节,简化开发。
API 接口应提供 测试环境,方便开发测试。
系统应提供在线接口调试工具,降低调试难度。
API 文档应 explanations 各接口的业务逻辑。
接口应设计兼容策略,保证与旧版本接口的兼容性。
通信接口
系统模块之间应采用高速总线或网络进行数据交互。
支持标准网络通信接口,如Ethernet, TCP/IP等。
提供不同带宽、冗余的网络接口,满足不同通信需求。
支持采用行业标准网络协议,如HTTP、SNMP等。
关键通信链路应提供冗余机制,防止单点故障。
通信接口应支持监控机制,包括流量、错误、延迟等。
通信接口应提供防火墙、VPN等访问控制机制。
无线通信接口应支持标准协议,如WiFi、Bluetooth等。
无线通信应采用加密和验证机制,保证安全性。
支持通用串口接口,用于调试和维护。
接口应具有故障检测、隔离机制,提高可用性。
版本号 | 修改日期 | 备注 | 作者
v1.0 | 2023-07-17 | 初稿
角色 | 描述
系统管理员 | 负责系统的整体管理和维护,如用户管理,权限分配等
操作人员 | 使用系统执行日常操作,如数据输入,报表查看等
系统开发人员 | 负责系统功能代码的开发和测试
数据库管理员 | 负责数据库的管理,进行性能优化等
系统分析师 | 确定系统需求,产出需求规格说明书
测试人员 | 对系统进行功能测试、性能测试等
产品经理 | 负责定义产品路线图和需求
用户 | 使用系统的终端用户
